name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: get current branch
        run: |
          git config pull.rebase true
          git pull origin ${GITHUB_HEAD_REF}

      - name: List files that are too large
        run: |
         find . -regex ".*\.\(jpg\|jpeg\)" -type f -size +500k
         find . -regex ".*\.\(jpg\|jpeg\)" -type f -size +500k -exec false {} +

      - name: Remove spaces from filenames
        run: find . -type f -name "* *" | while read file; do mv "$file" ${file// /_}; done

      - name: Find uppercase files
        run: find . -name "*.*[A-Z]*" ! -name "*.*[^A-Z]*"

      - name: Find uppercase and rename to lowercase
        run: find . -depth -name '*.JPG' -type f -exec bash -c 'base=${0%.*} ext=${0##*.} a=${base,,}.${ext,,}; [ "$a" != "$0" ] && mv -- "$0" "$a"' {} \;

      - name: Find uppercase files
        run: find . -name "*.*[A-Z]*" ! -name "*.*[^A-Z]*"

      #- name: Install jpegoptim
      #  run: |
      #    sudo apt update
      #    sudo apt install -y jpegoptim

      #- name: Find images above 800 x 800
      #  run: find . -regex ".*\.\(jpg\|jpeg\)" -type f -exec identify -format 'Too big; %i\n' '{}' \; | awk '$1>2048 || $2>2048'

      - name: Commit report
        run: |
          git config --global user.name 'ElliottLandsborough'
          git config --global user.email '1583854+ElliottLandsborough@users.noreply.github.com'
          if [[ $(git status -s) ]]; then
            git add -A
            git commit -m "Fix bad files"
            git push origin HEAD:${GITHUB_HEAD_REF}
          fi