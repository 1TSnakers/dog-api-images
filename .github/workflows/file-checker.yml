name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: List all files
        run: ls -alh ./

      - name: Remove spaces from filenames
        run: find . -type f -name "* *" | while read file; do mv "$file" ${file// /_}; done

      - name: Find uppercase files
        run: find . -name "*.*[A-Z]*" ! -name "*.*[^A-Z]*"

      - name: Find uppercase and rename to lowercase
        run: find . -depth -name '*.JPG' -type f -exec bash -c 'base=${0%.*} ext=${0##*.} a=${base,,}.${ext,,}; [ "$a" != "$0" ] && mv -- "$0" "$a"' {} \;

      - name: Find uppercase files
        run: find . -name "*.*[A-Z]*" ! -name "*.*[^A-Z]*"

      # Todo: resize images in command line

      # The grep inverts the status, so we get a fail if any files are found
      - name: Find files larger than 300KB
        #run: find ./ -type f -size +300k | grep .
        run: find ./ -type f -size +300k

      - name: Commit report
        run: |
          git config --global user.name 'Dogbot'
          git config --global user.email 'ElliottLandsborough@users.noreply.github.com'
          git add -A && git commit -m "Fix files"
          git push